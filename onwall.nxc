// Движение робота на заданном расстоянии от стены (>= 10 см)
// с ультразвуковым дальномером на порту 3 (под углом 15 град, стена справа),
// левый двигатель А, правый - В
// FOR LEGO MINDSTORM

int x, x_zad = 15;                 // Переменные по дальности
int oshibka, osh_1 = 0;            // Отклон. от эталона и предыдущее его значение
int lev_dv, prav_dv;               // Мощность левого и правого двигателей
int skorost = 50;                  // Средняя скорость (мощность) двигателей
float k_p = 5.0;                   // Коэффициет k_п в ПИД-регуляторе
float k_i = 3.0;                   // Коэффициет k_и в ПИД-регуляторе
float k_d = 0.001;                   // Коэффициет k_д в ПИД-регуляторе
float dt = 0.001;                  // Временной шаг 1 мс (приблизительно)
float integral = 0, proizvodn;     // Интеграл и производная ошибки
task main()
{
 SetSensorLowspeed(S3);            // Конфигурирование ультразвук. дальномера
while (true)                      // Основной бесконечный цикл программы
  {
    x = SensorUS(S3);               // Определение текущей дальности
    oshibka =  x - x_zad;           // Отклонение от заданной дальности
    integral = integral + oshibka * dt;   // Вычисление интеграла
     if (integral > 10) integral = 10;    // Ограничение интеграла
     if (integral < -10) integral = -10;
    proizvodn = (oshibka - osh_1) / dt;   // Вычисление производной
    osh_1 = oshibka;                // Сохранение на следующий цикл (i-1)
      // Формирование сигналов скорости (мощности) на левый и правый двигатели:
    lev_dv  = skorost + k_p * oshibka + k_i * integral + k_d * proizvodn;
    prav_dv = skorost - k_p * oshibka - k_i * integral - k_d * proizvodn;
      if(lev_dv >  100) lev_dv =  100;  // Ограничения расчитанных мощностей
      if(lev_dv < -100) lev_dv = -100;
      if(prav_dv >  100) prav_dv =  100;
      if(prav_dv < -100) prav_dv = -100;
    OnFwd(OUT_A, lev_dv);             // Подача сигналов управления на двигатели
    OnFwd(OUT_B, prav_dv);
    Wait(1);                          // Задержка для реализации dt
  }
}
